{"version":3,"sources":["helpers.js","actions/counter.js","reducers/counter.js","selectors/index.js","configureStore.js","selectorsLogger.js","reducers/index.js","sagas/counter.js","router.js","routes/Home.jsx","routes/Settings.jsx","App.jsx","sagas/index.js","serviceWorker.js","index.jsx"],"names":["createEmptyAction","type","createDataAction","payload","ASYNC_INC","ASYNC_DEC","actions_counter","increment","decrement","asyncInc","asyncIncSuccess","asyncDec","asyncDecSuccess","loading","success","_ref2","value","createReducer","initState","methods","arguments","length","undefined","revertedMetods","Object","keys","reduce","accum","methodName","state","action","objectSpread","reduxCreateReducer","_createReducer","defineProperty","_ref3","_ref4","selectors","configureStore","composeEnhancers","initialState","rootSaga","history","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","composeWithDevTools","serializeState","compose","sagaMonitor","createSagaMonitor","level","verbose","effectCancel","actionDispatch","selectorMonitor","sagaMiddleware","createSagaMiddleware","logger","message","error","args","_console","console","join","apply","concat","toConsumableArray","cache","store","next","result","forEach","selectorName","selector","startTime","Date","now","oldState","getState","eq","timeDiff","groupCollapsed","getTimeDiffColor","log","groupEnd","e","selectorLogger","createStore","combineReducers","router","connectRouter","counter","createRootReducer","applyMiddleware","routerMiddleware","run","makeAsyncIncrement","makeAsyncDecrement","counterSaga","timer","time","Promise","s","setTimeout","_ref","regenerator_default","a","wrap","_context","prev","put","actions","t0","stop","_marked","_context2","_marked2","_context3","takeEvery","_marked3","root","settings","home","mapDispatchToProps","useStyles","makeStyles","theme","button","margin","spacing","input","display","connect","classes","react_default","createElement","Grid","container","item","xs","Typography","variant","CircularProgress","Button","onClick","className","color","disabled","Settings","App","createHashHistory","sagas","mark","all","createRootSaga","createMuiTheme","palette","primary","purple","secondary","green","status","danger","es","ThemeProvider","material_ui_pickers_esm","utils","MomentUtils","locale","esm","react_router","exact","path","routes","render","to","component","Home","Boolean","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.af9d0dc5.chunk.js","sourcesContent":["import { createReducer as reduxCreateReducer } from \"redux-create-reducer\";\n\nexport const createEmptyAction = type => () => ({ type });\n\nexport const createDataAction = type => payload => ({ type, payload });\n\nexport const createReducer = (initState, methods = {}) => {\n  const revertedMetods = Object.keys(methods).reduce((accum, methodName) => {\n    accum[methodName] = (state, action) => ({\n      ...state,\n      ...methods[methodName](action, state)\n    });\n    return accum;\n  }, {});\n  return reduxCreateReducer(initState, revertedMetods);\n};\n","import { createEmptyAction, createDataAction } from \"../helpers\";\n\nexport const INCREMENT = \"counter/INCREMENT\";\nexport const DECREMENT = \"counter/DECREMENT\";\n\nexport const ASYNC_INC = \"counter/ASYNC_INCREMENT\";\nexport const ASYNC_DEC = \"counter/ASYNC_DECREMENT\";\n\nexport const ASYNC_INC_SUCCESS = \"counter/ASYNC_INCREMENT_SUCCESS\";\nexport const ASYNC_DEC_SUCCESS = \"counter/ASYNC_DECREMENT_SUCCESS\";\n\nexport const types = {\n  INCREMENT,\n  DECREMENT\n};\n\nexport default {\n  increment: createEmptyAction(INCREMENT),\n  decrement: createEmptyAction(DECREMENT),\n\n  asyncInc: createDataAction(ASYNC_INC),\n  asyncIncSuccess: createDataAction(ASYNC_INC_SUCCESS),\n\n  asyncDec: createDataAction(ASYNC_DEC),\n  asyncDecSuccess: createDataAction(ASYNC_DEC_SUCCESS)\n};\n","import { createReducer } from \"../helpers\";\nimport {\n  INCREMENT,\n  DECREMENT,\n  ASYNC_INC,\n  ASYNC_DEC,\n  ASYNC_INC_SUCCESS,\n  ASYNC_DEC_SUCCESS\n} from \"../actions/counter\";\n\nconst initialState = {\n  value: 0,\n  loading: false\n};\n\nexport const getCounter = ({ counter }) => counter;\n\nconst loading = () => ({ loading: true });\nconst success = ({ payload: value }) => ({ value, loading: false });\n\nexport default createReducer(initialState, {\n  [INCREMENT]: (action, { value }) => ({ value: value + 1 }),\n  [DECREMENT]: (action, { value }) => ({ value: value - 1 }),\n  [ASYNC_INC]: loading,\n  [ASYNC_DEC]: loading,\n  [ASYNC_INC_SUCCESS]: success,\n  [ASYNC_DEC_SUCCESS]: success\n});\n","export default {};\n","import { routerMiddleware } from 'connected-react-router';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport createSagaMonitor from '@clarketm/saga-monitor';\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createRootReducer from './reducers';\nimport selectorLogger from './selectorsLogger';\n\nexport default function (initialState = {}, rootSaga, history) {\n  let composeEnhancers;\n  // TODO:: fix before release\n  const isDevelopment = true;\n  if (isDevelopment && typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) {\n    composeEnhancers = composeWithDevTools;\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n      serializeState: true,\n    });\n  } else {\n    composeEnhancers = compose;\n  }\n\n  const sagaMonitorConfig = {\n    level: 'debug', // logging level\n    verbose: true, // verbose mode\n    effectCancel: true, // show cancelled effects\n    actionDispatch: true, // show dispatched actions\n  };\n\n  const sagaLogger = (level, message, error, args) => {\n    /* eslint-disable no-console */\n    if (level === 'error' && error) {\n      console.error(error);\n      if (args) {\n        console.error(args.join('\\n'));\n      }\n    } else {\n      console[level](message, error, ...args);\n    }\n    /* eslint-enable no-console */\n  };\n\n  let sagaMonitor;\n\n  if (isDevelopment) {\n    sagaMonitor = createSagaMonitor(sagaMonitorConfig);\n  }\n\n  const sagaMiddleware = createSagaMiddleware({\n    sagaMonitor,\n    logger: sagaLogger,\n  });\n\n  let selectorMonitor;\n\n  if (isDevelopment) {\n    selectorMonitor = selectorLogger();\n  }\n\n  const store = createStore(\n    createRootReducer(history),\n    initialState,\n    composeEnhancers(applyMiddleware(routerMiddleware(history), sagaMiddleware, selectorMonitor)),\n  );\n  sagaMiddleware.run(rootSaga);\n\n  // Hot reloading\n  if (module.hot) {\n    // Enable Webpack hot module replacement for reducers\n    module.hot.accept('./reducers', () => {\n      store.replaceReducer(createRootReducer(history));\n    });\n  }\n\n  return store;\n}\n","/* eslint-disable import/namespace */\nimport eq from 'lodash/eq';\nimport * as selectors from './selectors';\n\nconst getTimeDiffColor = timeDiff =>\n  /* eslint-disable */\n  (timeDiff > 500\n    ? '#ee0000'\n    : timeDiff > 200\n    ? '#cc5500'\n    : timeDiff > 100\n    ? '#997700'\n    : timeDiff > 60\n    ? '#889900'\n    : timeDiff > 30\n    ? '#669900'\n    : timeDiff > 20\n    ? '#00aa00'\n    : timeDiff > 10\n    ? '#00bb22'\n    : '#00aa77');\n/* eslint-enable */\nexport default () => {\n  const cache = {};\n  return store => next => (action) => {\n    // eslint-disable-next-line callback-return\n    const result = next(action);\n    Object.keys(selectors).forEach((selectorName) => {\n      // eslint-disable-next-line import/namespace\n      const selector = selectors[selectorName];\n      try {\n        const startTime = Date.now();\n        const oldState = cache[selectorName];\n        cache[selectorName] = selector(store.getState());\n\n        if (!eq(oldState, cache[selectorName])) {\n          const timeDiff = Date.now() - startTime;\n          // eslint-disable-next-line no-console\n          console.groupCollapsed(\n            ` Selector %c\"${selectorName}\"%c  -  %c${timeDiff} ms`,\n            'color: blue',\n            'color: black',\n            `color: ${getTimeDiffColor(timeDiff)}`,\n          );\n          // eslint-disable-next-line no-console\n          console.log(cache[selectorName]);\n          // eslint-disable-next-line no-console\n          console.groupEnd();\n        }\n      } catch (e) {\n        // eslint-disable-next-line no-empty\n      }\n    });\n    return result;\n  };\n};\n","import { combineReducers } from \"redux\";\nimport { connectRouter } from \"connected-react-router\";\nimport counter from \"./counter\";\n\nexport default history =>\n  combineReducers({\n    router: connectRouter(history),\n    counter\n  });\n","import { put, takeEvery } from \"redux-saga/effects\";\nimport actions, { ASYNC_DEC, ASYNC_INC } from \"../actions/counter\";\n\nconst timer = time =>\n  new Promise(s => {\n    setTimeout(s, time);\n  });\n\nfunction* makeAsyncIncrement({ payload: counter }) {\n  try {\n    yield timer(1000);\n    yield put(actions.asyncIncSuccess(counter + 1));\n  } catch (err) {\n    yield put(actions.asyncIncSuccess(0));\n  }\n}\n\nfunction* makeAsyncDecrement({ payload: counter }) {\n  try {\n    yield timer(1000);\n    yield put(actions.asyncDecSuccess(counter - 1));\n  } catch (err) {\n    yield put(actions.asyncDecSuccess(0));\n  }\n}\n\nexport default function* counterSaga() {\n  yield takeEvery(ASYNC_INC, makeAsyncIncrement);\n  yield takeEvery(ASYNC_DEC, makeAsyncDecrement);\n}\n","export default {\n  root: '/',\n  settings: '/settings',\n  home: '/home',\n};\n","import React from \"react\";\nimport { Grid, Typography, Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { connect } from \"react-redux\";\n\nimport actions from \"../actions/counter\";\nimport { getCounter } from \"../reducers/counter\";\n\nconst mapStateToProps = state => ({\n  counter: getCounter(state)\n});\n\nconst mapDispatchToProps = {\n  increment: actions.increment,\n  asyncDec: actions.asyncDec,\n  ...actions // decrement\n};\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  },\n  input: {\n    display: \"none\"\n  }\n}));\n\nconst Home = ({ counter, increment, decrement, asyncInc, asyncDec }) => {\n  const classes = useStyles();\n  return (\n    <Grid container>\n      <Grid item xs={12}>\n        <Typography variant=\"h1\">\n          Home - {counter.loading ? <CircularProgress /> : counter.value}\n        </Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <Button\n          onClick={() => increment()}\n          variant=\"contained\"\n          className={classes.button}\n          color=\"primary\"\n        >\n          +\n        </Button>\n        <Button\n          onClick={() => decrement()}\n          variant=\"contained\"\n          className={classes.button}\n          color=\"secondary\"\n        >\n          -\n        </Button>\n      </Grid>\n      <Grid item xs={12}>\n        <Button\n          onClick={() => asyncInc(counter.value)}\n          variant=\"contained\"\n          disabled={counter.loading}\n          className={classes.button}\n          color=\"primary\"\n        >\n          Async inc\n        </Button>\n        <Button\n          onClick={() => asyncDec(counter.value)}\n          variant=\"contained\"\n          disabled={counter.loading}\n          className={classes.button}\n          color=\"secondary\"\n        >\n          Async dec\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Home);\n","import React from \"react\";\n\nexport default () => <div>Settings</div>;\n","import React from \"react\";\nimport { createHashHistory } from \"history\";\nimport { Provider } from \"react-redux\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport { Route, Switch, Redirect } from \"react-router\";\nimport { MuiPickersUtilsProvider } from \"material-ui-pickers\";\nimport MomentUtils from \"@date-io/moment\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport purple from \"@material-ui/core/colors/purple\";\nimport green from \"@material-ui/core/colors/green\";\nimport configureStore from \"./configureStore\";\nimport createRootSaga from \"./sagas\";\n\nimport routes from \"./router\";\nimport Home from \"./routes/Home\";\nimport Settings from \"./routes/Settings\";\n\nfunction App() {\n  const initialState = {};\n  const history = createHashHistory({});\n\n  const rootSaga = createRootSaga();\n  const store = configureStore(initialState, rootSaga, history);\n  const theme = createMuiTheme({\n    palette: {\n      primary: purple,\n      secondary: green\n    },\n    status: {\n      danger: \"orange\"\n    }\n  });\n  const isFirstVisit = false;\n\n  const redirectToRoot = () => (\n    <Redirect to={isFirstVisit ? routes.settings : routes.home} />\n  );\n  return (\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <MuiPickersUtilsProvider utils={MomentUtils} locale=\"ru\">\n          <ConnectedRouter history={history}>\n            <Switch>\n              <Route exact path={routes.root} render={redirectToRoot} />\n              <Route exact path={routes.home} component={Home} />\n              <Route exact path={routes.settings} component={Settings} />\n            </Switch>\n          </ConnectedRouter>\n        </MuiPickersUtilsProvider>\n      </ThemeProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { all } from \"redux-saga/effects\";\nimport counter from \"./counter\";\n\nexport default function createRootSaga() {\n  const sagas = [counter()];\n\n  return function* rootSaga() {\n    yield all(sagas);\n  };\n}\n","/* eslint-disable no-console */\n/* eslint-disable no-param-reassign */\n/* eslint-disable no-use-before-define */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, window.document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}